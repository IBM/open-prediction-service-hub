dist: bionic
language: python
python:
  - "3.8"

# Additional services for testing and deployment
services:
  - docker

before_install:
  - sudo apt-get update
  - sudo apt-get install qemu binfmt-support qemu-user-static # Install the qemu packages
  - bash scripts/update_docker.sh

stages:
  - name: testing
  - name: verify-versions
  - name: deploy
    if: (branch IN (develop, main) AND NOT (type IN (pull_request))) OR (tag IS present)

jobs:
  include:
    - stage: testing
      script:
        - cd ops-implementations/ads-ml-service
        - cp ../../open-prediction-service.yaml app/gen/tmp.schemas.ops.yaml
        - bash scripts/tests.sh
      name: "ads-ml-service-test"
    - script:
      - cd ops-implementations/wml-service
      - pip3 install --quiet tox
      - tox
      name: "wml-proxy-test"
    - script:
      - cd ops-implementations/sagemaker-service
      - pip3 install --quiet tox
      - tox
      name: "sagemaker-proxy-test"
    - stage: verify-versions
      script:
        - python3 -m pip install lxml PyYAML
        - python3 scripts/check_ver.py
    - stage: deploy
      script: ops-implementations/deploy.sh "${TARGET}" "$(grep -m 1 -oP -e "__version__ = ['\"]\K([^'\"]*)(?=['\"])" ops-implementations/ads-ml-service/app/version.py)"
      env: TARGET=ads-ml-service
    - script: ops-implementations/deploy.sh "${TARGET}" "$(grep -m 1 -oP -e "__version__ = ['\"]\K([^'\"]*)(?=['\"])" ops-implementations/sagemaker-service/openapi_server/version.py)"
      env: TARGET=sagemaker-service
    - script: ops-implementations/deploy.sh "${TARGET}" "$(grep -m 1 -oP -e "__version__ = ['\"]\K([^'\"]*)(?=['\"])" ops-implementations/wml-service/swagger_server/version.py)"
      env: TARGET=wml-service
    - script:
        - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes # This step will execute the registering scripts
        - ops-implementations/deploy.sh "${TARGET}" "$(grep -m 1 -oP -e "__version__ = ['\"]\K([^'\"]*)(?=['\"])" ops-implementations/ads-ml-service/app/version.py)" linux/arm64
      env:
        - TARGET=ads-ml-service
        - DOCKER_NAMESPACE=decisions-tooling/aarch64
        - PYTHON_BASE_IMAGE=arm64v8/python
