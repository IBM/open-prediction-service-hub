{
  "openapi": "3.0.2",
  "info": {
    "title": "Open Prediction Service",
    "version": "1"
  },
  "paths": {
    "/status": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get Server Status",
        "operationId": "get_server_status_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerStatus"
                }
              }
            }
          }
        }
      }
    },
    "/models": {
      "get": {
        "tags": [
          "Admin"
        ],
        "summary": "Get Models",
        "description": "Returns the list of ML models.",
        "operationId": "get_models_models_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Models Models Get",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MLSchema"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Add Model",
        "operationId": "add_model_models_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_add_model_models_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Admin"
        ],
        "summary": "Remove Model",
        "operationId": "remove_model_models_delete",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Model Name",
              "type": "string"
            },
            "name": "model_name",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Model Version",
              "type": "string"
            },
            "name": "model_version",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/invocations": {
      "post": {
        "tags": [
          "ML"
        ],
        "summary": "Predict",
        "operationId": "predict_invocations_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Prediction"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Body_add_model_models_post": {
        "title": "Body_add_model_models_post",
        "required": [
          "file"
        ],
        "type": "object",
        "properties": {
          "file": {
            "title": "File",
            "type": "string",
            "format": "binary"
          }
        }
      },
      "Feature": {
        "title": "Feature",
        "required": [
          "name",
          "order",
          "type"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string",
            "description": "Feature name"
          },
          "order": {
            "title": "Order",
            "type": "integer",
            "description": "Position of feature"
          },
          "type": {
            "title": "Type",
            "type": "string",
            "description": "Numpy type of feature"
          }
        },
        "description": "Feature of machine learning model\n:param name: name of the feature\n:param order: the position of the feature in method signature\n:param type: type of feature. Can be python type or numpy type"
      },
      "HTTPValidationError": {
        "title": "HTTPValidationError",
        "type": "object",
        "properties": {
          "detail": {
            "title": "Detail",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        }
      },
      "MLSchema": {
        "title": "MLSchema",
        "required": [
          "name",
          "version",
          "method_name",
          "input_schema",
          "output_schema",
          "metadata"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string",
            "description": "Name of model"
          },
          "version": {
            "title": "Version",
            "type": "string",
            "description": "Version of model"
          },
          "method_name": {
            "title": "Method Name",
            "type": "string",
            "description": "Name of method. (e.g predict, predict_proba)"
          },
          "input_schema": {
            "title": "Input Schema",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Feature"
            },
            "description": "Input schema of ml model"
          },
          "output_schema": {
            "title": "Output Schema",
            "allOf": [
              {
                "$ref": "#/components/schemas/OutputSchema"
              }
            ],
            "description": "Output schema of ml model"
          },
          "metadata": {
            "title": "Metadata",
            "allOf": [
              {
                "$ref": "#/components/schemas/Metadata"
              }
            ],
            "description": "Additional information for ml model"
          }
        },
        "description": "Model independent information"
      },
      "Metadata": {
        "title": "Metadata",
        "required": [
          "description",
          "author",
          "trained_at",
          "metrics"
        ],
        "type": "object",
        "properties": {
          "description": {
            "title": "Description",
            "type": "string",
            "description": "Description of model"
          },
          "author": {
            "title": "Author",
            "type": "string",
            "description": "Author of model"
          },
          "trained_at": {
            "title": "Trained At",
            "type": "string",
            "description": "Training date"
          },
          "class_names": {
            "title": "Class Names",
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Lookup table for class index <-> class name"
          },
          "metrics": {
            "title": "Metrics",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Metric"
            },
            "description": "Metrics for model"
          }
        }
      },
      "Metric": {
        "title": "Metric",
        "required": [
          "name",
          "value"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string",
            "description": "Name of metric"
          },
          "value": {
            "title": "Value",
            "type": "string",
            "description": "Value of metric"
          }
        }
      },
      "OutputAttr": {
        "title": "OutputAttr",
        "required": [
          "name",
          "type"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string",
            "description": "Attribute name"
          },
          "type": {
            "title": "Type",
            "enum": [
              "int",
              "float",
              "string",
              "[Probability]"
            ],
            "type": "string",
            "description": "Attribute type"
          }
        }
      },
      "OutputSchema": {
        "title": "OutputSchema",
        "required": [
          "attributes"
        ],
        "type": "object",
        "properties": {
          "attributes": {
            "title": "Attributes",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OutputAttr"
            }
          }
        }
      },
      "Parameter": {
        "title": "Parameter",
        "required": [
          "name",
          "value"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string",
            "description": "Name of the feature"
          },
          "value": {
            "title": "Value",
            "type": "string",
            "description": "Value of the feature"
          }
        },
        "description": "Parameter for ml model invocation"
      },
      "Prediction": {
        "title": "Prediction",
        "required": [
          "prediction"
        ],
        "type": "object",
        "properties": {
          "prediction": {
            "title": "Prediction",
            "type": "string",
            "description": "Model output for Classification/Regression"
          },
          "probabilities": {
            "title": "Probabilities",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Probability"
            },
            "description": "Probabilities for classification result"
          }
        },
        "description": "Ml output for model.predict(array_like) and model.predict_proba(array_like)"
      },
      "Probability": {
        "title": "Probability",
        "required": [
          "class_index",
          "value"
        ],
        "type": "object",
        "properties": {
          "class_name": {
            "title": "Class Name",
            "type": "string"
          },
          "class_index": {
            "title": "Class Index",
            "type": "integer"
          },
          "value": {
            "title": "Value",
            "type": "number"
          }
        }
      },
      "RequestBody": {
        "title": "RequestBody",
        "required": [
          "model_name",
          "model_version",
          "params"
        ],
        "type": "object",
        "properties": {
          "model_name": {
            "title": "Model Name",
            "type": "string",
            "description": "Name of model"
          },
          "model_version": {
            "title": "Model Version",
            "type": "string",
            "description": "Version of model"
          },
          "params": {
            "title": "Params",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Parameter"
            },
            "description": "Model parameters"
          }
        },
        "description": "RequestBody captures all information needed for model invocation",
        "example": {
          "model_name": "miniloan-linear-svc",
          "model_version": "v0",
          "params": [
            {
                "name": "creditScore",
                "value": "5"
            },
            {
                "name": "income",
                "value": "5"
            },
            {
                "name": "loanAmount",
                "value": "5"
            },
            {
                "name": "monthDuration",
                "value": "5"
            },
            {
                "name": "rate",
                "value": "3"
            }
          ]
        }
      },
      "ServerStatus": {
        "title": "ServerStatus",
        "required": [
          "model_count"
        ],
        "type": "object",
        "properties": {
          "model_count": {
            "title": "Model Count",
            "type": "integer",
            "description": "Number of ml models in local provider"
          }
        }
      },
      "ValidationError": {
        "title": "ValidationError",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "type": "object",
        "properties": {
          "loc": {
            "title": "Location",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "msg": {
            "title": "Message",
            "type": "string"
          },
          "type": {
            "title": "Error Type",
            "type": "string"
          }
        }
      }
    }
  }
}