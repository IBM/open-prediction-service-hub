{
  "openapi": "3.0.3",
  "info": {
    "title": "Open Prediction Service",
    "version": "2.0.0",
    "description": "The Open Prediction Service API is an effort to provide an Open API that enables unsupported native ML Providers in Decision Designer or Decision Runtime."
  },
  "tags": [
    {
      "name": "Status",
      "description": "Endpoints related to the capacities of the server"
    },
    {
      "name": "Discovery",
      "description": "Endpoints related to the discovery of machine learning models and deployments"
    },
    {
      "name": "Manage",
      "description": "Endpoints related to the management of machine learning models and deployments"
    },
    {
      "name": "Train",
      "description": "Endpoints related to the taining of machine learning models"
    },
    {
      "name": "Runtime",
      "description": "Endpoints to run deployed models"
    }
  ],
  "paths": {
    "/capabilities": {
      "get": {
        "tags": [
          "Status"
        ],
        "summary": "Get Server Capabilities",
        "operationId": "get_capabilities",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Capabilities"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/status": {
      "get": {
        "tags": [
          "Status"
        ],
        "summary": "Get Server Status",
        "description": "Returns a health check on underlying services availability",
        "operationId": "get_status",
        "responses": {
          "default": {
            "description": "Health Check",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerStatus"
                }
              }
            }
          }
        }
      }
    },
    "/models": {
      "get": {
        "tags": [
          "Discovery"
        ],
        "summary": "List Models",
        "description": "Returns the list of ML models.",
        "operationId": "list_models",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineLearningModels"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Manage"
        ],
        "summary": "Add a trained Model",
        "description": "Adds a trained mode in the form of a trained model file",
        "operationId": "add_model",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineLearningModel"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Manage"
        ],
        "description": "Removes latest model",
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/models/{model_id}": {
      "delete": {
        "tags": [
          "Manage"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "model_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/models/{model_id}/endpoints": {
      "get": {
        "tags": [
          "Discovery"
        ],
        "summary": "List Endpoints",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "model_id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineLearningModelEndpoint"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Manage"
        ],
        "summary": "Create Endpoint",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "model_id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Required endpoint definition",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MachineLearningModelEndpoint"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineLearningModelEndpoint"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Manage"
        ],
        "summary": "Delete latest endpoint",
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "model_id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineLearningModelEndpoint"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/models/{model_id}/endpoints/{endpoint_id}": {
      "delete": {
        "tags": [
          "Manage"
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "model_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "required": true,
            "name": "endpoint_id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/train/{model_id}": {
      "post": {
        "tags": [
          "Train"
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "model_id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineLearningModelEndpoint"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/predict": {
      "post": {
        "tags": [
          "Runtime"
        ],
        "summary": "Call Prediction of specified deployment",
        "operationId": "prediction",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Prediction"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "MachineLearningModelEndpoint": {
        "title": "Machine Learning Model Endpoint",
        "description": "Represents a way to access to the runnable prediction",
        "required": [
          "id",
          "name",
          "status",
          "model_id",
          "deployed_at"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "ID",
            "type": "string",
            "description": "ID of Version"
          },
          "name": {
            "title": "Name",
            "type": "string",
            "description": "Name of Version"
          },
          "model_id": {
            "title": "Name",
            "type": "string",
            "description": "Id of Model this Version is from"
          },
          "deployed_at": {
            "type": "string",
            "format": "date-time",
            "description": "date of the Version"
          }
        }
      },
      "MachineLearningModels": {
        "title": "List of Machine Learning Models",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/MachineLearningModel"
        }
      },
      "MachineLearningModel": {
        "title": "Machine Learning Model",
        "required": [
          "id",
          "name",
          "created_at",
          "modified_at"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "ID",
            "type": "string",
            "description": "ID of model"
          },
          "name": {
            "title": "Name",
            "type": "string",
            "description": "Name of model"
          },
          "input_schema": {
            "title": "Input Schema",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Feature"
            },
            "description": "Input schema of ml model"
          },
          "output_schema": {
            "title": "Output Schema",
            "allOf": [
              {
                "$ref": "#/components/schemas/OutputSchema"
              }
            ],
            "description": "Output schema of ml model"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "date of the creation of the model"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "description": "date of the update of the model"
          },
          "version": {
            "type": "string"
          }
        }
      },
      "Feature": {
        "title": "Feature",
        "required": [
          "name",
          "order",
          "type"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string",
            "description": "name of the feature"
          },
          "order": {
            "title": "Order",
            "type": "integer",
            "description": "Position of feature in method signature"
          },
          "type": {
            "title": "Type",
            "type": "string",
            "description": "type of feature. Can be python type or numpy type"
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "error": {
            "title": "Error Message",
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "OutputSchema": {
        "title": "OutputSchema",
        "type": "object",
        "additionalProperties": true,
        "example": {
          "prediction": {
            "type": "string"
          },
          "probability": {
            "type": "array",
            "items": "double"
          }
        }
      },
      "ServerStatus": {
        "title": "ServerStatus",
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "title": "Status",
            "type": "string",
            "description": "Status of the service",
            "enum": [
              "OK",
              "ERROR"
            ]
          },
          "error": {
            "title": "Error Message",
            "type": "string",
            "description": "Error if status in error"
          }
        }
      },
      "Capabilities": {
        "title": "Capabilities",
        "required": [
          "capabilities"
        ],
        "type": "object",
        "properties": {
          "capabilities": {
            "title": "Capabilities",
            "type": "string",
            "description": "Capabilities of the service",
            "enum": [
              "CONSUME",
              "MANAGE",
              "TRAIN"
            ]
          }
        }
      },
      "Parameter": {
        "title": "Parameter",
        "required": [
          "name",
          "value"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string",
            "description": "Name of the feature"
          },
          "value": {
            "title": "Value",
            "type": "string",
            "description": "Value of the feature"
          }
        },
        "description": "Parameter for ml model invocation"
      },
      "Prediction": {
        "title": "Prediction Payload",
        "required": [
          "deployment_id",
          "params"
        ],
        "type": "object",
        "properties": {
          "deployment_id": {
            "title": "deployment id",
            "type": "string",
            "description": "id of the deployment to call"
          },
          "model_id": {
            "title": "model id",
            "type": "string",
            "description": "optionnal id of the model id corresponding to this deployment (in case deployments have multiple models for example)"
          },
          "params": {
            "title": "Params",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Parameter"
            },
            "description": "Model parameters"
          }
        },
        "description": "All information needed for model invocation"
      }
    }
  }
}