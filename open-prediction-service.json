{
  "openapi": "3.0.2",
  "info": {
    "title": "Open Prediction Service",
    "version": "2"
  },
  "paths": {
    "/capabilities": {
      "get": {
        "tags": [
          "Discovery"
        ],
        "summary": "Get Server Capabilities",
        "operationId": "get_capabilities",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Capabilities"
                }
              }
            }
          }
        }
      }
    },
    "/status": {
      "get": {
        "tags": [
          "Discovery"
        ],
        "summary": "Get Server Status",
        "operationId": "get_status",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServerStatus"
                }
              }
            }
          }
        }
      }
    },
    "/models": {
      "get": {
        "tags": [
          "Discovery"
        ],
        "summary": "List Models",
        "description": "Returns the list of ML models.",
        "operationId": "list_models",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineLearningModels"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Manage"
        ],
        "summary": "Add a trained Model",
        "description": "Adds a trained mode in the form of a trained model file",
        "operationId": "add_model",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineLearningModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Manage"
        ],
        "responses": {
          "200": {
            "description": "Successful Response"
          }
        }
      }
    },
    "/train/{model_id}": {
      "post": {
        "tags": [
          "Train"
        ],
        "parameters": [
          {
            "in": "path",
            "required": true,
            "name": "model_id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MachineLearningDeployment"
                }
              }
            }
          }
        }
      }
    },
    "/predict": {
      "post": {
        "tags": [
          "Runtime"
        ],
        "summary": "Call Prediction of specified deployment",
        "operationId": "prediction",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "MachineLearningDeployment": {
        "title": "Machine Learning Deployment",
        "required": [
          "id",
          "name",
          "status",
          "model_id",
          "deployed_at"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "ID",
            "type": "string",
            "description": "ID of Deployment"
          },
          "name": {
            "title": "Name",
            "type": "string",
            "description": "Name of Deployment"
          },
          "model_id": {
            "title": "Name",
            "type": "string",
            "description": "Id of Model this Deployment is from"
          },
          "deployed_at": {
            "type": "string",
            "format": "date-time",
            "description": "date of the deployment"
          }
        }
      },
      "MachineLearningModels": {
        "title": "List of Machine Learning Models",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/MachineLearningModel"
        }
      },
      "MachineLearningModel": {
        "title": "Machine Learning Model",
        "required": [
          "id",
          "name",
          "created_at",
          "modified_at"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "ID",
            "type": "string",
            "description": "ID of model"
          },
          "name": {
            "title": "Name",
            "type": "string",
            "description": "Name of model"
          },
          "input_schema": {
            "title": "Input Schema",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Feature"
            },
            "description": "Input schema of ml model"
          },
          "output_schema": {
            "title": "Output Schema",
            "allOf": [
              {
                "$ref": "#/components/schemas/OutputSchema"
              }
            ],
            "description": "Output schema of ml model"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "date of the creation of the model"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time",
            "description": "date of the update of the model"
          }
        }
      },
      "Feature": {
        "title": "Feature",
        "required": [
          "name",
          "order",
          "type"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string",
            "description": "Feature name"
          },
          "order": {
            "title": "Order",
            "type": "integer",
            "description": "Position of feature"
          },
          "type": {
            "title": "Type",
            "type": "string",
            "description": "Numpy type of feature"
          }
        },
        "description": "Feature of machine learning model\n:param name: name of the feature\n:param order: the position of the feature in method signature\n:param type: type of feature. Can be python type or numpy type"
      },
      "HTTPValidationError": {
        "title": "HTTPValidationError",
        "type": "object",
        "properties": {
          "detail": {
            "title": "Detail",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        }
      },
      "OutputSchema": {
        "title": "OutputSchema",
        "type": "object",
        "additionalProperties": true,
        "example": {
          "prediction": {
            "type": "string"
          },
          "probability": {
            "type": "array",
            "items": "double"
          }
        }
      },
      "RequestBody": {
        "title": "RequestBody",
        "required": [
          "deployment_id",
          "params"
        ],
        "type": "object",
        "properties": {
          "deployment_id": {
            "title": "deployment id",
            "type": "string",
            "description": "id of the deployment to call"
          },
          "params": {
            "title": "Params",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Parameter"
            },
            "description": "Model parameters"
          }
        },
        "description": "RequestBody captures all information needed for model invocation"
      },
      "Parameter": {
        "title": "Parameter",
        "required": [
          "name",
          "value"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Name",
            "type": "string",
            "description": "Name of the feature"
          },
          "value": {
            "title": "Value",
            "type": "string",
            "description": "Value of the feature"
          }
        },
        "description": "Parameter for ml model invocation"
      },
      "ServerStatus": {
        "title": "ServerStatus",
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "title": "Status",
            "type": "string",
            "description": "Status of the service",
            "enum": [
              "OK",
              "ERROR"
            ]
          },
          "error": {
            "title": "Error Message",
            "type": "string",
            "description": "Error if status in error"
          }
        }
      },
      "Capabilities": {
        "title": "Capabilities",
        "required": [
          "capabilities"
        ],
        "type": "object",
        "properties": {
          "capabilities": {
            "title": "Capabilities",
            "type": "string",
            "description": "Capabilities of the service",
            "enum": [
              "CONSUME",
              "MANAGE",
              "TRAIN"
            ]
          }
        }
      },
      "ValidationError": {
        "title": "ValidationError",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "type": "object",
        "properties": {
          "loc": {
            "title": "Location",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "msg": {
            "title": "Message",
            "type": "string"
          },
          "type": {
            "title": "Error Type",
            "type": "string"
          }
        }
      }
    }
  }
}
