# coding: utf-8

from __future__ import absolute_import
from datetime import datetime

from openapi_server.models.base_model_ import Model
from openapi_server import util


class EndpointAllOf(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, deployed_at=None):  # noqa: E501
        """EndpointAllOf - a model defined in OpenAPI

        :param id: The id of this EndpointAllOf.  # noqa: E501
        :type id: str
        :param deployed_at: The deployed_at of this EndpointAllOf.  # noqa: E501
        :type deployed_at: datetime
        """
        self.openapi_types = {
            'id': str,
            'deployed_at': datetime
        }

        self.attribute_map = {
            'id': 'id',
            'deployed_at': 'deployed_at'
        }

        self._id = id
        self._deployed_at = deployed_at

    @classmethod
    def from_dict(cls, dikt) -> 'EndpointAllOf':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Endpoint_allOf of this EndpointAllOf.  # noqa: E501
        :rtype: EndpointAllOf
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this EndpointAllOf.

        Id of Version  # noqa: E501

        :return: The id of this EndpointAllOf.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this EndpointAllOf.

        Id of Version  # noqa: E501

        :param id: The id of this EndpointAllOf.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")  # noqa: E501

        self._id = id

    @property
    def deployed_at(self):
        """Gets the deployed_at of this EndpointAllOf.

        date of the Version  # noqa: E501

        :return: The deployed_at of this EndpointAllOf.
        :rtype: datetime
        """
        return self._deployed_at

    @deployed_at.setter
    def deployed_at(self, deployed_at):
        """Sets the deployed_at of this EndpointAllOf.

        date of the Version  # noqa: E501

        :param deployed_at: The deployed_at of this EndpointAllOf.
        :type deployed_at: datetime
        """
        if deployed_at is None:
            raise ValueError("Invalid value for `deployed_at`, must not be `None`")  # noqa: E501

        self._deployed_at = deployed_at
